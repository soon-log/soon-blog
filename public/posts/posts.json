{
  "frontend": [
    {
      "key": "react-hooks-deep-dive",
      "title": "React Hooks 심화 가이드",
      "date": "2025-07-12",
      "tags": [
        "React",
        "JavaScript",
        "Hooks",
        "함수형컴포넌트"
      ],
      "category": "frontend",
      "summary": "React Hooks의 동작 원리와 최적화 방법에 대해 깊이 있게 다룹니다.",
      "thumbnail": "/posts/react-hooks-deep-dive/thumbnail.jpg"
    },
    {
      "key": "typescript-advanced-types",
      "title": "TypeScript 고급 타입 활용법",
      "date": "2025-07-11",
      "tags": [
        "TypeScript",
        "타입시스템",
        "제네릭"
      ],
      "category": "frontend",
      "summary": "TypeScript의 고급 타입 기능들을 실제 프로젝트에서 활용하는 방법을 소개합니다.",
      "thumbnail": null
    },
    {
      "key": "javascript-async-patterns",
      "title": "JavaScript 비동기 패턴 완벽 가이드",
      "date": "2025-07-06",
      "tags": [
        "JavaScript",
        "비동기",
        "Promise",
        "async/await"
      ],
      "category": "frontend",
      "summary": "JavaScript의 다양한 비동기 처리 패턴과 활용법을 체계적으로 정리했습니다.",
      "thumbnail": "/posts/javascript-async-patterns/thumbnail.jpg"
    },
    {
      "key": "css-grid-flexbox-mastery",
      "title": "CSS Grid와 Flexbox 완전 정복",
      "date": "2025-07-02",
      "tags": [
        "CSS",
        "Grid",
        "Flexbox",
        "레이아웃"
      ],
      "category": "frontend",
      "summary": "CSS Grid와 Flexbox를 활용한 현대적인 웹 레이아웃 구성 방법을 익힙니다.",
      "thumbnail": "/posts/css-grid-flexbox-mastery/thumbnail.jpg"
    },
    {
      "key": "responsive-web-design",
      "title": "반응형 웹 디자인 구현 가이드",
      "date": "2025-06-29",
      "tags": [
        "반응형",
        "CSS",
        "미디어쿼리",
        "모바일"
      ],
      "category": "frontend",
      "summary": "다양한 디바이스에서 최적화된 사용자 경험을 제공하는 반응형 웹을 만드는 방법입니다.",
      "thumbnail": null
    },
    {
      "key": "javascript-es2024-features",
      "title": "JavaScript ES2024 새로운 기능들",
      "date": "2025-06-23",
      "tags": [
        "JavaScript",
        "ES2024",
        "최신기능"
      ],
      "category": "frontend",
      "summary": "JavaScript ES2024에서 추가된 새로운 기능들과 실무에서의 활용 방법을 알아봅니다.",
      "thumbnail": null
    },
    {
      "key": "frontend-performance-optimization",
      "title": "프론트엔드 성능 최적화 가이드",
      "date": "2025-06-21",
      "tags": [
        "성능최적화",
        "웹성능",
        "번들링",
        "캐싱"
      ],
      "category": "frontend",
      "summary": "웹 애플리케이션의 로딩 속도와 런타임 성능을 향상시키는 다양한 기법들을 다룹니다.",
      "thumbnail": null
    },
    {
      "key": "accessibility-web-development",
      "title": "웹 접근성을 고려한 개발 방법 정리 및 예제 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코드 제공 및 테스트 코",
      "date": "2025-06-18",
      "tags": [
        "웹접근성",
        "ARIA",
        "사용자경험",
        "표준"
      ],
      "category": "frontend",
      "summary": "모든 사용자가 접근 가능한 웹 애플리케이션을 만들기 위한 접근성 고려사항을 다룹니다. 깔깔깔깔 마녀 농담추가 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해보자 더 추가해",
      "thumbnail": "/posts/accessibility-web-development/thumbnail.jpg"
    }
  ],
  "career": [
    {
      "key": "agile-development-methodology",
      "title": "애자일 개발 방법론 실전 적용",
      "date": "2025-07-07",
      "tags": [
        "애자일",
        "개발방법론",
        "프로젝트관리"
      ],
      "category": "career",
      "summary": "애자일 개발 방법론을 실제 프로젝트에 적용하는 방법과 노하우를 공유합니다.",
      "thumbnail": null
    },
    {
      "key": "code-review-best-practices",
      "title": "효과적인 코드 리뷰 방법론",
      "date": "2025-06-24",
      "tags": [
        "코드리뷰",
        "협업",
        "개발문화",
        "품질관리"
      ],
      "category": "career",
      "summary": "팀의 코드 품질과 개발 문화를 향상시키는 효과적인 코드 리뷰 방법을 소개합니다.",
      "thumbnail": "/posts/code-review-best-practices/thumbnail.jpg"
    },
    {
      "key": "team-communication-skills",
      "title": "개발자를 위한 효과적인 소통 방법",
      "date": "2025-06-20",
      "tags": [
        "소통",
        "협업",
        "개발문화",
        "리더십"
      ],
      "category": "career",
      "summary": "개발팀에서 원활한 소통을 위한 실용적인 방법과 도구들을 소개합니다.",
      "thumbnail": "/posts/team-communication-skills/thumbnail.jpg"
    },
    {
      "key": "career-growth-developer",
      "title": "개발자 커리어 성장 로드맵",
      "date": "2025-06-16",
      "tags": [
        "커리어",
        "성장",
        "개발자",
        "스킬업"
      ],
      "category": "career",
      "summary": "주니어부터 시니어까지, 개발자의 단계별 성장 과정과 필요한 역량들을 정리했습니다.",
      "thumbnail": "/posts/career-growth-developer/thumbnail.jpg"
    },
    {
      "key": "remote-work-productivity",
      "title": "원격 근무 생산성 향상 팁",
      "date": "2025-06-14",
      "tags": [
        "원격근무",
        "생산성",
        "워라밸",
        "협업도구"
      ],
      "category": "career",
      "summary": "원격 근무 환경에서 생산성을 높이고 효과적으로 협업하는 방법을 공유합니다.",
      "thumbnail": "/posts/remote-work-productivity/thumbnail.jpg"
    }
  ],
  "backend": [
    {
      "key": "nodejs-performance-optimization",
      "title": "Node.js 성능 최적화 전략",
      "date": "2025-07-10",
      "tags": [
        "Node.js",
        "성능최적화",
        "메모리관리"
      ],
      "category": "backend",
      "summary": "Node.js 애플리케이션의 성능을 향상시키는 다양한 기법들을 살펴봅니다.",
      "thumbnail": "/posts/nodejs-performance-optimization/thumbnail.jpg"
    },
    {
      "key": "database-optimization-techniques",
      "title": "데이터베이스 성능 최적화 기법",
      "date": "2025-07-05",
      "tags": [
        "데이터베이스",
        "성능최적화",
        "SQL",
        "인덱싱"
      ],
      "category": "backend",
      "summary": "데이터베이스 쿼리 성능을 향상시키는 다양한 최적화 기법들을 다룹니다.",
      "thumbnail": null
    },
    {
      "key": "rest-api-design-guidelines",
      "title": "RESTful API 설계 가이드라인",
      "date": "2025-07-03",
      "tags": [
        "REST API",
        "API설계",
        "백엔드"
      ],
      "category": "backend",
      "summary": "효율적이고 확장 가능한 RESTful API를 설계하는 방법을 상세히 설명합니다.",
      "thumbnail": null
    },
    {
      "key": "microservices-architecture-guide",
      "title": "마이크로서비스 아키텍처 설계 가이드",
      "date": "2025-06-30",
      "tags": [
        "마이크로서비스",
        "아키텍처",
        "분산시스템"
      ],
      "category": "backend",
      "summary": "마이크로서비스 아키텍처의 장단점과 실제 구현 시 고려사항들을 다룹니다.",
      "thumbnail": "/posts/microservices-architecture-guide/thumbnail.jpg"
    },
    {
      "key": "web-security-fundamentals",
      "title": "웹 보안 기초와 실무 적용",
      "date": "2025-06-27",
      "tags": [
        "웹보안",
        "HTTPS",
        "XSS",
        "CSRF"
      ],
      "category": "backend",
      "summary": "웹 애플리케이션의 주요 보안 취약점과 이를 방어하는 방법들을 정리했습니다.",
      "thumbnail": null
    },
    {
      "key": "aws-serverless-architecture",
      "title": "AWS 서버리스 아키텍처 구현",
      "date": "2025-06-22",
      "tags": [
        "AWS",
        "서버리스",
        "Lambda",
        "API Gateway"
      ],
      "category": "backend",
      "summary": "AWS 서비스들을 활용한 서버리스 아키텍처 설계와 구현 방법을 실습해봅니다.",
      "thumbnail": "/posts/aws-serverless-architecture/thumbnail.jpg"
    },
    {
      "key": "mongodb-data-modeling",
      "title": "MongoDB 데이터 모델링 가이드",
      "date": "2025-06-19",
      "tags": [
        "MongoDB",
        "NoSQL",
        "데이터모델링"
      ],
      "category": "backend",
      "summary": "MongoDB의 특성을 활용한 효율적인 데이터 모델링 방법과 스키마 설계를 알아봅니다.",
      "thumbnail": null
    },
    {
      "key": "graphql-api-development",
      "title": "GraphQL API 개발과 최적화",
      "date": "2025-06-15",
      "tags": [
        "GraphQL",
        "API",
        "쿼리최적화"
      ],
      "category": "backend",
      "summary": "GraphQL을 활용한 효율적인 API 개발 방법과 성능 최적화 기법을 소개합니다.",
      "thumbnail": null
    }
  ],
  "devops": [
    {
      "key": "docker-container-best-practices",
      "title": "Docker 컨테이너 모범 사례",
      "date": "2025-07-09",
      "tags": [
        "Docker",
        "컨테이너",
        "DevOps",
        "배포"
      ],
      "category": "devops",
      "summary": "Docker 컨테이너를 효율적으로 관리하고 배포하는 모범 사례를 정리했습니다.",
      "thumbnail": null
    },
    {
      "key": "git-workflow-strategies",
      "title": "Git 워크플로우 전략과 활용",
      "date": "2025-07-01",
      "tags": [
        "Git",
        "버전관리",
        "협업",
        "워크플로우"
      ],
      "category": "devops",
      "summary": "팀 개발에서 효과적인 Git 워크플로우 전략과 브랜치 관리 방법을 소개합니다.",
      "thumbnail": null
    },
    {
      "key": "ci-cd-pipeline-setup",
      "title": "CI/CD 파이프라인 구축 실습",
      "date": "2025-06-25",
      "tags": [
        "CI/CD",
        "자동화",
        "배포",
        "GitHub Actions"
      ],
      "category": "devops",
      "summary": "GitHub Actions를 활용한 효율적인 CI/CD 파이프라인 구축 방법을 단계별로 설명합니다.",
      "thumbnail": null
    },
    {
      "key": "kubernetes-deployment-guide",
      "title": "Kubernetes 배포 전략과 운영",
      "date": "2025-06-17",
      "tags": [
        "Kubernetes",
        "컨테이너",
        "오케스트레이션",
        "배포"
      ],
      "category": "devops",
      "summary": "Kubernetes를 활용한 애플리케이션 배포 전략과 클러스터 운영 방법을 정리했습니다.",
      "thumbnail": null
    }
  ],
  "etc": [
    {
      "key": "clean-code-principles",
      "title": "클린 코드 작성 원칙과 실습",
      "date": "2025-07-04",
      "tags": [
        "클린코드",
        "코드품질",
        "리팩토링"
      ],
      "category": "etc",
      "summary": "읽기 쉽고 유지보수하기 좋은 클린 코드를 작성하는 방법을 알아봅니다.",
      "thumbnail": "/posts/clean-code-principles/thumbnail.jpg"
    },
    {
      "key": "software-testing-strategies",
      "title": "소프트웨어 테스팅 전략과 도구",
      "date": "2025-06-28",
      "tags": [
        "테스팅",
        "단위테스트",
        "통합테스트",
        "TDD"
      ],
      "category": "etc",
      "summary": "효과적인 소프트웨어 테스팅 전략과 다양한 테스팅 도구들의 활용법을 알아봅니다.",
      "thumbnail": "/posts/software-testing-strategies/thumbnail.jpg"
    },
    {
      "key": "test",
      "title": "함께 일하고 싶은 동료",
      "date": "2025-01-27",
      "tags": [
        "팀워크",
        "협업",
        "개발문화",
        "자동화",
        "문서화"
      ],
      "category": "etc",
      "summary": "주변 사람들이 일에 몰입할 수 있도록 좋은 환경으로 지속적으로 개선하는 사람에 대한 생각을 정리했습니다.",
      "thumbnail": "/posts/test/thumbnail.jpg"
    },
    {
      "key": "test2",
      "title": "함께 일하고 싶은 동료",
      "date": "2025-01-27",
      "tags": [
        "하하",
        "웃음"
      ],
      "category": "etc",
      "thumbnail": "/posts/test2/thumbnail.png"
    }
  ],
  "design": [
    {
      "key": "ui-ux-design-principles",
      "title": "UI/UX 디자인 기본 원칙",
      "date": "2025-07-08",
      "tags": [
        "UI/UX",
        "디자인",
        "사용자경험"
      ],
      "category": "design",
      "summary": "좋은 사용자 경험을 만들기 위한 UI/UX 디자인의 기본 원칙들을 소개합니다.",
      "thumbnail": "/posts/ui-ux-design-principles/thumbnail.jpg"
    },
    {
      "key": "design-system-implementation",
      "title": "디자인 시스템 구축과 운영",
      "date": "2025-06-26",
      "tags": [
        "디자인시스템",
        "컴포넌트",
        "일관성"
      ],
      "category": "design",
      "summary": "일관성 있는 사용자 경험을 위한 디자인 시스템 구축 방법과 운영 노하우를 공유합니다.",
      "thumbnail": "/posts/design-system-implementation/thumbnail.jpg"
    }
  ]
}