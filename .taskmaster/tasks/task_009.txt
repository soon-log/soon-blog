# Task ID: 9
# Title: 반응형 레이아웃 및 탐색 구현
# Status: pending
# Dependencies: 1
# Priority: medium
# Description: 데스크탑에 대한 사이드바와 모바일에 대한 드로어 메뉴를 사용하여 모든 기기 크기에 대한 최적의 사용자 경험을 제공하는 반응형 레이아웃을 만듭니다.
# Details:
1. `/components/layout.tsx`에 Layout 구성 요소를 만듭니다. 포함:
   - 로고, 검색 바 및 테마 토글이 있는 헤더
   - 데스크탑 보기에 대한 사이드바(md 브레이크포인트 및 위에서 숨겨짐)
   - 모바일 보기에 대한 드로어 메뉴(md 브레이크포인트 및 위에서 숨겨짐)
   - 메인 컨텐츠 영역
   - 푸터
2. `/components/sidebar.tsx`에 Sidebar 구성 요소 구현:
   - 카테고리 탐색 링크
   - 최근 게시물 섹션
   - 인기 태그 섹션
3. `/components/mobile-drawer.tsx`에 MobileDrawer 구성 요소 구현:
   - 헤더의 햄버거 메뉴 토글
   - 탐색 링크를 포함하는 슬라이드 드로어
   - 닫기 버튼
4. Tailwind CSS를 사용하여 반응형 스타일 적용:
```typescript
<div className="flex flex-col md:flex-row">
  {/* Sidebar - hidden on mobile */}
  <aside className="hidden md:block md:w-64 lg:w-72 shrink-0 border-r">
    <Sidebar categories={categories} recentPosts={recentPosts} popularTags={popularTags} />
  </aside>
  
  {/* Mobile drawer - visible only on mobile */}
  <MobileDrawer isOpen={isDrawerOpen} onClose={() => setDrawerOpen(false)} />
  
  {/* Main content */}
  <main className="flex-1 p-4 md:p-6">
    {children}
  </main>
</div>
```
5. CSS 전환을 사용하여 모바일 드로어를 부드럽게 적용
6. 모든 대화형 요소에 적절한 호버 및 포커스 상태 보장

# Test Strategy:
1. 다양한 기기 크기(모바일, 태블릿, 데스크탑)에서 레이아웃 테스트
2. 사이드바가 모바일에서 숨겨지고 드로어에 액세스할 수 있는지 확인
3. 드로어 열기/닫기 기능 테스트
4. 모든 탐색 링크가 정확하게 작동하는지 확인
5. 키보드 액세스 테스트
6. 레이아웃이 창이 변경될 때 정확하게 적용되는지 확인
7. 모바일 기기의 터치 상호작용 테스트

# Subtasks:
## 1. 레이아웃 구성 요소 구조 설정 [pending]
### Dependencies: None
### Description: CSS Grid 또는 Flexbox를 사용하여 반응형 그리드 시스템을 기반으로 하는 기본 레이아웃 구성 요소 구조를 정의하고 설정합니다. 구조가 유연하고 다양한 화면 크기에 적용할 수 있는지 확인합니다.
### Details:
반응형 그리드를 사용하여 CSS Grid 또는 Flexbox를 설정하고 열, 간격, 여백을 정의하고 메인 레이아웃 컨테이너를 설정합니다. 구조가 유연하고 다양한 화면 크기에 적용할 수 있는지 확인합니다.

## 2. 데스크탑 사이드바 탐색 구현 [pending]
### Dependencies: 9.1
### Description: 데스크탑 화면에 최적화된 사이드바 탐색 구성 요소를 개발합니다. 접근성, 키보드 탐색 가능성 및 레이아웃 구조와 통합합니다.
### Details:
상대 단위를 사용하여 더 큰 화면에서 지속되는 영구 사이드바를 만듭니다. 탐색 링크, 아이콘 및 적절한 간격과 포커스 상태를 포함합니다.

## 3. 모바일 드로어 메뉴 개발 [pending]
### Dependencies: 9.1
### Description: 모바일에서 측면에서 들어오는 드로어를 만듭니다. 데스크탑 사이드바를 작은 화면에서 대체하는 모바일 드로어 메뉴를 만듭니다. 부드러운 전환, 터치 접근성 및 키보드 탐색을 보장합니다.
### Details:
햄버거 메뉴 버튼을 구현하여 드로어를 토글합니다. 드로어는 콘텐츠를 덮거나 밀거나 해야 하며 접근성 표준을 유지해야 합니다.

## 4. Tailwind CSS를 사용한 반응형 스타일 적용 [pending]
### Dependencies: 9.1, 9.2, 9.3
### Description: Tailwind CSS를 사용하여 반응형 스타일을 적용하여 레이아웃, 사이드바 및 드로어를 다양한 브레이크포인트에서 원활하게 적용합니다. 간격, 글꼴 및 다양한 기기에 대한 가시성을 처리합니다.
### Details:
Tailwind의 반응형 유틸리티 클래스를 사용하여 다양한 브레이크포인트에서 가시성, 간격 및 레이아웃을 제어합니다. 기기를 통해 테스트하여 일관된 모양과 사용성을 보장합니다.

