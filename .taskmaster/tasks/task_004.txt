# Task ID: 4
# Title: 개별 포스트 상세 페이지
# Status: pending
# Dependencies: 2
# Priority: high
# Description: 선택된 블로그 포스트의 전체 콘텐츠를 적절한 마크다운 포맷팅과 코드 하이라이팅으로 렌더링하는 포스트 상세 페이지를 만듭니다.
# Details:
다음 기능을 가진 포스트 상세 페이지를 구현합니다:
1. 선택된 포스트의 전체 마크다운 콘텐츠 렌더링
2. 포스트 메타데이터(제목, 날짜, 카테고리, 태그) 표시
3. 코드 블록에 대한 구문 강조 구현
4. 관련 포스트로의 네비게이션 제공

구현 세부사항:
- Next.js 동적 라우팅을 사용하여 pages/posts/[slug].tsx 생성
- 정적 사이트 생성을 위해 getStaticProps와 getStaticPaths 사용:
  - getStaticPaths: 빌드 시 모든 포스트에 대한 경로 생성
  - getStaticProps: 슬러그로 포스트 데이터 가져오기
- 마크다운 렌더링 구현:
  - 마크다운을 HTML로 변환하기 위해 remark 또는 markdown-it 사용
  - 코드 구문 강조를 위해 Prism.js 통합
  - Tailwind CSS로 마크다운 요소 스타일링
- 컴포넌트 생성:
  - PostHeader: 제목, 날짜, 카테고리, 태그 표시
  - PostContent: 마크다운 콘텐츠 렌더링
  - RelatedPosts: 같은 카테고리의 포스트 표시

접근성 고려사항:
- 적절한 제목 계층 구조 보장
- 이미지에 적절한 alt 텍스트 추가
- 코드 블록의 접근성 보장

# Test Strategy:
1. 컴포넌트 테스트:
   - PostHeader가 올바른 메타데이터를 표시하는지 테스트
   - PostContent가 마크다운을 올바르게 렌더링하는지 테스트
   - 다양한 언어에 대해 코드 하이라이팅이 작동하는지 테스트

2. 라우팅 테스트:
   - 다양한 슬러그로 동적 라우팅 테스트
   - 존재하지 않는 슬러그 처리 테스트

3. 렌더링 테스트:
   - 다양한 마크다운 기능으로 마크다운 렌더링 테스트
   - 다양한 언어로 코드 블록 렌더링 테스트
   - 다양한 뷰포트 크기에서 반응형 레이아웃 테스트
